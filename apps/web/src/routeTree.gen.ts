/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as ShortenImport } from "./routes/shorten";
import { Route as GenerateImport } from "./routes/generate";
import { Route as ContactImport } from "./routes/contact";
import { Route as AuthImport } from "./routes/auth";
import { Route as AuthLayoutImport } from "./routes/_auth-layout";
import { Route as IndexImport } from "./routes/index";
import { Route as GenerateStepImport } from "./routes/generate.$step";
import { Route as AuthLayoutSignupImport } from "./routes/_auth-layout.signup";
import { Route as AuthLayoutLoginImport } from "./routes/_auth-layout.login";
import { Route as AuthLayoutForgetPasswordImport } from "./routes/_auth-layout.forget-password";
import { Route as DashboardDashboardIndexImport } from "./routes/_dashboard/dashboard/index";
import { Route as DashboardAccountIndexImport } from "./routes/_dashboard/account/index";

// Create Virtual Routes

const TermsLazyImport = createFileRoute("/terms")();
const PrivacyLazyImport = createFileRoute("/privacy")();
const PricingLazyImport = createFileRoute("/pricing")();
const IntegrationLazyImport = createFileRoute("/integration")();
const FaqsLazyImport = createFileRoute("/faqs")();
const AboutLazyImport = createFileRoute("/about")();

// Create/Update Routes

const TermsLazyRoute = TermsLazyImport.update({
	path: "/terms",
	getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/terms.lazy").then((d) => d.Route));

const PrivacyLazyRoute = PrivacyLazyImport.update({
	path: "/privacy",
	getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/privacy.lazy").then((d) => d.Route));

const PricingLazyRoute = PricingLazyImport.update({
	path: "/pricing",
	getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/pricing.lazy").then((d) => d.Route));

const IntegrationLazyRoute = IntegrationLazyImport.update({
	path: "/integration",
	getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/integration.lazy").then((d) => d.Route));

const FaqsLazyRoute = FaqsLazyImport.update({
	path: "/faqs",
	getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/faqs.lazy").then((d) => d.Route));

const AboutLazyRoute = AboutLazyImport.update({
	path: "/about",
	getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/about.lazy").then((d) => d.Route));

const ShortenRoute = ShortenImport.update({
	path: "/shorten",
	getParentRoute: () => rootRoute,
} as any);

const GenerateRoute = GenerateImport.update({
	path: "/generate",
	getParentRoute: () => rootRoute,
} as any);

const ContactRoute = ContactImport.update({
	path: "/contact",
	getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
	path: "/auth",
	getParentRoute: () => rootRoute,
} as any);

const AuthLayoutRoute = AuthLayoutImport.update({
	id: "/_auth-layout",
	getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
	path: "/",
	getParentRoute: () => rootRoute,
} as any);

const GenerateStepRoute = GenerateStepImport.update({
	path: "/$step",
	getParentRoute: () => GenerateRoute,
} as any);

const AuthLayoutSignupRoute = AuthLayoutSignupImport.update({
	path: "/signup",
	getParentRoute: () => AuthLayoutRoute,
} as any);

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
	path: "/login",
	getParentRoute: () => AuthLayoutRoute,
} as any);

const AuthLayoutForgetPasswordRoute = AuthLayoutForgetPasswordImport.update({
	path: "/forget-password",
	getParentRoute: () => AuthLayoutRoute,
} as any);

const DashboardDashboardIndexRoute = DashboardDashboardIndexImport.update({
	id: "/_dashboard/dashboard/",
	getParentRoute: () => rootRoute,
} as any);

const DashboardAccountIndexRoute = DashboardAccountIndexImport.update({
	id: "/_dashboard/account/",
	getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			preLoaderRoute: typeof IndexImport;
			parentRoute: typeof rootRoute;
		};
		"/_auth-layout": {
			preLoaderRoute: typeof AuthLayoutImport;
			parentRoute: typeof rootRoute;
		};
		"/auth": {
			preLoaderRoute: typeof AuthImport;
			parentRoute: typeof rootRoute;
		};
		"/contact": {
			preLoaderRoute: typeof ContactImport;
			parentRoute: typeof rootRoute;
		};
		"/generate": {
			preLoaderRoute: typeof GenerateImport;
			parentRoute: typeof rootRoute;
		};
		"/shorten": {
			preLoaderRoute: typeof ShortenImport;
			parentRoute: typeof rootRoute;
		};
		"/about": {
			preLoaderRoute: typeof AboutLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/faqs": {
			preLoaderRoute: typeof FaqsLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/integration": {
			preLoaderRoute: typeof IntegrationLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/pricing": {
			preLoaderRoute: typeof PricingLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/privacy": {
			preLoaderRoute: typeof PrivacyLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/terms": {
			preLoaderRoute: typeof TermsLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/_auth-layout/forget-password": {
			preLoaderRoute: typeof AuthLayoutForgetPasswordImport;
			parentRoute: typeof AuthLayoutImport;
		};
		"/_auth-layout/login": {
			preLoaderRoute: typeof AuthLayoutLoginImport;
			parentRoute: typeof AuthLayoutImport;
		};
		"/_auth-layout/signup": {
			preLoaderRoute: typeof AuthLayoutSignupImport;
			parentRoute: typeof AuthLayoutImport;
		};
		"/generate/$step": {
			preLoaderRoute: typeof GenerateStepImport;
			parentRoute: typeof GenerateImport;
		};
		"/_dashboard/account/": {
			preLoaderRoute: typeof DashboardAccountIndexImport;
			parentRoute: typeof rootRoute;
		};
		"/_dashboard/dashboard/": {
			preLoaderRoute: typeof DashboardDashboardIndexImport;
			parentRoute: typeof rootRoute;
		};
	}
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
	IndexRoute,
	AuthLayoutRoute.addChildren([
		AuthLayoutForgetPasswordRoute,
		AuthLayoutLoginRoute,
		AuthLayoutSignupRoute,
	]),
	AuthRoute,
	ContactRoute,
	GenerateRoute.addChildren([GenerateStepRoute]),
	ShortenRoute,
	AboutLazyRoute,
	FaqsLazyRoute,
	IntegrationLazyRoute,
	PricingLazyRoute,
	PrivacyLazyRoute,
	TermsLazyRoute,
	DashboardAccountIndexRoute,
	DashboardDashboardIndexRoute,
]);

/* prettier-ignore-end */
